{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\Desktop\\\\Usr\\\\Dev\\\\React\\\\switch-ui-react\\\\src\\\\components\\\\InfoContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { StyledInfoContainer, Avatar, CurrentTime, Time, PMAM, StyledFaReact, BatteryLife, BatteryLifeOuter, BatteryLifeInner, BatteryLifeTerminal } from '../styles/StyledInfoContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InfoContainer() {\n  _s();\n\n  const [currentTime, setCurrentTime] = useState('');\n  const [pmAm, setPmAm] = useState(''); //init current active time\n\n  useEffect(() => {\n    const date = new Date();\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n\n    if (hours === 12) {\n      setPmAm('PM');\n    } else if (hours > 11 && hours !== 12) {\n      hours = date.getHours() - 12;\n      setPmAm('PM');\n    } else setPmAm('AM');\n\n    if (minutes < 10) {\n      minutes = `0${minutes}`;\n    }\n\n    setCurrentTime(`${hours} : ${minutes}`);\n    setCurrentTime(`4 : 15`);\n  }, []); //update time every 30 seconds\n\n  useEffect(() => {\n    setInterval(() => {\n      const date = new Date();\n      let hours = date.getHours();\n      let minutes = date.getMinutes();\n\n      if (hours === 12) {\n        setPmAm('PM');\n      } else if (hours > 11) {\n        hours = date.getHours() - 12;\n        setPmAm('PM');\n      } else setPmAm('AM');\n\n      if (minutes < 10) minutes = `0${minutes}`;\n      setCurrentTime(`${hours} : ${minutes}`);\n      setCurrentTime(`4 : 15`);\n    }, 30000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StyledInfoContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      id: \"StyledAvatar\",\n      src: require('../assets/avatar.png')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentTime, {\n      id: \"StyledCurrentTime\",\n      children: [/*#__PURE__*/_jsxDEV(Time, {\n        id: \"Time\",\n        children: currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PMAM, {\n        id: \"PMAM\",\n        children: [\" \", pmAm]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StyledFaReact, {\n      id: \"StyledFaReact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BatteryLife, {\n      id: \"StyledBatteryLife\",\n      children: [/*#__PURE__*/_jsxDEV(BatteryLifeOuter, {\n        id: \"BatteryLifeOuter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BatteryLifeInner, {\n        id: \"BatterLifeInner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BatteryLifeTerminal, {\n        id: \"BatterLifeTerminal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InfoContainer, \"jr21zpxzjjABfIlD7Jeq0t1zN84=\");\n\n_c = InfoContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoContainer\");","map":{"version":3,"sources":["C:/Users/thoma/Desktop/Usr/Dev/React/switch-ui-react/src/components/InfoContainer.tsx"],"names":["useEffect","useState","StyledInfoContainer","Avatar","CurrentTime","Time","PMAM","StyledFaReact","BatteryLife","BatteryLifeOuter","BatteryLifeInner","BatteryLifeTerminal","InfoContainer","currentTime","setCurrentTime","pmAm","setPmAm","date","Date","hours","getHours","minutes","getMinutes","setInterval","require"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\n\nimport { \n  StyledInfoContainer, \n  Avatar, \n  CurrentTime,\n  Time,\n  PMAM,\n  StyledFaReact,\n  BatteryLife,\n  BatteryLifeOuter,\n  BatteryLifeInner,\n  BatteryLifeTerminal,\n} from '../styles/StyledInfoContainer'\n\nexport default function InfoContainer() {\n\tconst [currentTime, setCurrentTime] = useState('')\n  const [pmAm, setPmAm] = useState('')\n\n  //init current active time\n  useEffect(() => {\n    const date = new Date();\n    let hours: number = date.getHours();\n    let minutes: any = date.getMinutes();\n    if (hours === 12) {\n      setPmAm('PM')\n    } else if (hours > 11 && hours !== 12) {\n      hours = date.getHours() - 12;\n      setPmAm('PM')\n    } else setPmAm('AM')\n    if(minutes < 10) {minutes = `0${minutes}`}\n    setCurrentTime(`${hours} : ${minutes}`)\n    setCurrentTime(`4 : 15`)\n  }, [])\n  \n  //update time every 30 seconds\n  useEffect(() => {\n    setInterval(() => {\n      const date = new Date();\n      let hours = date.getHours();\n      let minutes: any = date.getMinutes();\n      if (hours === 12) {\n        setPmAm('PM')\n      } else if (hours > 11) {\n        hours = date.getHours() - 12;\n        setPmAm('PM')\n      } else setPmAm('AM')\n      if (minutes < 10) minutes = `0${minutes}`\n    setCurrentTime(`${hours} : ${minutes}`)\n\t\tsetCurrentTime(`4 : 15`)\n    }, 30000)\n  }, [])\n\t\n  return(\n    <StyledInfoContainer>\n      <Avatar id='StyledAvatar' src={require('../assets/avatar.png')}/>\n        <CurrentTime id='StyledCurrentTime'>\n          <Time id='Time'>{currentTime}</Time>\n          <PMAM id='PMAM'> {pmAm}</PMAM>\n        </CurrentTime>\n        <StyledFaReact id='StyledFaReact'/>\n        <BatteryLife id='StyledBatteryLife'>\n          <BatteryLifeOuter id='BatteryLifeOuter'/>\n          <BatteryLifeInner id='BatterLifeInner'/>\n          <BatteryLifeTerminal id='BatterLifeTerminal'/>\n        </BatteryLife> \n    </StyledInfoContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}