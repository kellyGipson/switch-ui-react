{"ast":null,"code":"import _slicedToArray from\"C:/Users/thoma/Desktop/Usr/Dev/React/switch-ui-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{StyledAllProjects,SquareOne,SquareTwo,SquareThree,SquareFour}from\"../styles/StyledProjectTile\";import{useState}from'react';import{StyledProjectsContainer}from'../styles/StyledProjectsContainer';import{AppList}from\"../assets/AppList\";import{StyledProjectTile}from'../styles/StyledProjectTile';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProjectsContainer=function ProjectsContainer(){// Maintain MouseDown location and scroll info onmousedown of window\n// Add mousemove listener onmousedown\n// Calculate scrollLeft according to window clientX in mousemove\n// Remove mousemove on window's onmouseup listener\n// algo = scrollLeft - clientX + event.clientX\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),isScrolling=_useState2[0],setScrolling=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),scrollLeft=_useState4[0],setScrollLeft=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),clientX=_useState6[0],setClientX=_useState6[1];// onMouseMove function\nvar handleMouseMovement=function handleMouseMovement(e){if(isScrolling){e.preventDefault();e.currentTarget.scrollLeft=scrollLeft-e.clientX+clientX;}//  = offsetLeft - posX + e.clientX;\n};function handleTileClick(linksrc){window.open(linksrc,\"_blank\");}return/*#__PURE__*/_jsxs(StyledProjectsContainer,{onMouseDown:function onMouseDown(e){setScrolling(true);setScrollLeft(e.currentTarget.scrollLeft);setClientX(e.clientX);},onMouseUp:function onMouseUp(e){return setScrolling(false);},onMouseMove:function onMouseMove(e){return handleMouseMovement(e);},children:[/*#__PURE__*/_jsx(StyledProjectTile,{src:require(\"../assets/pokedex.webp\"),alt:AppList[0].name,onClick:function onClick(){return handleTileClick(AppList[0].link);}}),/*#__PURE__*/_jsx(StyledProjectTile,{src:require(\"../assets/keyboardenthusiast.webp\"),alt:AppList[1].name,onClick:function onClick(){return handleTileClick(AppList[1].link);}}),/*#__PURE__*/_jsxs(StyledAllProjects,{id:\"All Projects\",children:[/*#__PURE__*/_jsx(SquareOne,{}),/*#__PURE__*/_jsx(SquareTwo,{}),/*#__PURE__*/_jsx(SquareThree,{}),/*#__PURE__*/_jsx(SquareFour,{})]})]});};export default ProjectsContainer;","map":{"version":3,"sources":["C:/Users/thoma/Desktop/Usr/Dev/React/switch-ui-react/src/components/ProjectsContainer.tsx"],"names":["StyledAllProjects","SquareOne","SquareTwo","SquareThree","SquareFour","useState","StyledProjectsContainer","AppList","StyledProjectTile","ProjectsContainer","isScrolling","setScrolling","scrollLeft","setScrollLeft","clientX","setClientX","handleMouseMovement","e","preventDefault","currentTarget","handleTileClick","linksrc","window","open","require","name","link"],"mappings":"0IAAA,OACEA,iBADF,CAEEC,SAFF,CAGEC,SAHF,CAIEC,WAJF,CAKEC,UALF,KAMO,6BANP,CAOA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,uBAAT,KAAwC,mCAAxC,CACA,OAASC,OAAT,KAAwB,mBAAxB,CACA,OAASC,iBAAT,KAAkC,6BAAlC,C,wFAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAE/B;AACA;AACA;AACA;AACA;AAEA,cAAoCJ,QAAQ,CAAC,KAAD,CAA5C,wCAAOK,WAAP,eAAoBC,YAApB,eACA,eAAoCN,QAAQ,CAAC,CAAD,CAA5C,yCAAOO,UAAP,eAAmBC,aAAnB,eACA,eAA8BR,QAAQ,CAAC,CAAD,CAAtC,yCAAOS,OAAP,eAAgBC,UAAhB,eAEA;AACA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,CAAD,CAAqD,CAChF,GAAGP,WAAH,CAAgB,CACfO,CAAC,CAACC,cAAF,GACAD,CAAC,CAACE,aAAF,CAAgBP,UAAhB,CAA6BA,UAAU,CAAGK,CAAC,CAACH,OAAf,CAAyBA,OAAtD,CACA,CACD;AACA,CAND,CAQC,QAASM,CAAAA,eAAT,CAAyBC,OAAzB,CAA0C,CACxCC,MAAM,CAACC,IAAP,CAAYF,OAAZ,CAAqB,QAArB,EACD,CAEF,mBACC,MAAC,uBAAD,EACC,WAAW,CAAE,qBAAAJ,CAAC,CAAI,CAACN,YAAY,CAAC,IAAD,CAAZ,CAAoBE,aAAa,CAACI,CAAC,CAACE,aAAF,CAAgBP,UAAjB,CAAb,CAA2CG,UAAU,CAACE,CAAC,CAACH,OAAH,CAAV,CAAsB,CADzG,CAEC,SAAS,CAAE,mBAAAG,CAAC,QAAIN,CAAAA,YAAY,CAAC,KAAD,CAAhB,EAFb,CAGC,WAAW,CAAE,qBAACM,CAAD,QAAOD,CAAAA,mBAAmB,CAACC,CAAD,CAA1B,EAHd,wBAKI,KAAC,iBAAD,EAAmB,GAAG,CAAEO,OAAO,CAAC,wBAAD,CAA/B,CAA2D,GAAG,CAAEjB,OAAO,CAAC,CAAD,CAAP,CAAWkB,IAA3E,CAAiF,OAAO,CAAE,yBAAML,CAAAA,eAAe,CAACb,OAAO,CAAC,CAAD,CAAP,CAAWmB,IAAZ,CAArB,EAA1F,EALJ,cAMI,KAAC,iBAAD,EAAmB,GAAG,CAAEF,OAAO,CAAC,mCAAD,CAA/B,CAAsE,GAAG,CAAEjB,OAAO,CAAC,CAAD,CAAP,CAAWkB,IAAtF,CAA4F,OAAO,CAAE,yBAAML,CAAAA,eAAe,CAACb,OAAO,CAAC,CAAD,CAAP,CAAWmB,IAAZ,CAArB,EAArG,EANJ,cAOI,MAAC,iBAAD,EAAmB,EAAE,CAAC,cAAtB,wBACE,KAAC,SAAD,IADF,cAEE,KAAC,SAAD,IAFF,cAGE,KAAC,WAAD,IAHF,cAIE,KAAC,UAAD,IAJF,GAPJ,GADD,CAgBA,CAzCD,CA2CA,cAAejB,CAAAA,iBAAf","sourcesContent":["import {\n  StyledAllProjects, \n  SquareOne, \n  SquareTwo, \n  SquareThree, \n  SquareFour, \n} from \"../styles/StyledProjectTile\";\nimport { useState } from 'react'\nimport { StyledProjectsContainer } from '../styles/StyledProjectsContainer'\nimport { AppList } from \"../assets/AppList\"\nimport { StyledProjectTile } from '../styles/StyledProjectTile'\n\nconst ProjectsContainer = () => {\n\t\n\t// Maintain MouseDown location and scroll info onmousedown of window\n\t// Add mousemove listener onmousedown\n\t// Calculate scrollLeft according to window clientX in mousemove\n\t// Remove mousemove on window's onmouseup listener\n\t// algo = scrollLeft - clientX + event.clientX\n\n\tconst [isScrolling, setScrolling] = useState(false);\n\tconst [scrollLeft, setScrollLeft] = useState(0);\n\tconst [clientX, setClientX] = useState(0);\n\n\t// onMouseMove function\n\tconst handleMouseMovement = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n\t\tif(isScrolling) {\n\t\t\te.preventDefault()\n\t\t\te.currentTarget.scrollLeft = scrollLeft - e.clientX + clientX;\n\t\t}\n\t\t//  = offsetLeft - posX + e.clientX;\n\t}\n\n  function handleTileClick(linksrc: string) {\n    window.open(linksrc, \"_blank\");\n  }\n\t\n\treturn (\n\t\t<StyledProjectsContainer \n\t\t\tonMouseDown={e => {setScrolling(true); setScrollLeft(e.currentTarget.scrollLeft); setClientX(e.clientX)}}\n\t\t\tonMouseUp={e => setScrolling(false)}\n\t\t\tonMouseMove={(e) => handleMouseMovement(e)}\n\t\t>\n      <StyledProjectTile src={require(\"../assets/pokedex.webp\")} alt={AppList[0].name} onClick={() => handleTileClick(AppList[0].link)} />\n      <StyledProjectTile src={require(\"../assets/keyboardenthusiast.webp\")} alt={AppList[1].name} onClick={() => handleTileClick(AppList[1].link)} />\n      <StyledAllProjects id=\"All Projects\">\n        <SquareOne/>\n        <SquareTwo/>\n        <SquareThree/>\n        <SquareFour/>\n      </StyledAllProjects>\n\t\t</StyledProjectsContainer>\n\t)\n}\n\nexport default ProjectsContainer"]},"metadata":{},"sourceType":"module"}