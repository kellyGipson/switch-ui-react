{"ast":null,"code":"import _slicedToArray from\"C:/Users/thoma/Desktop/Usr/Dev/React/switch-ui-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from'react';import{StyledInfoContainer,Avatar,CurrentTime,Time,PMAM,StyledFaReact,BatteryLife,BatteryLifeOuter,BatteryLifeInner,BatteryLifeTerminal}from'../styles/StyledInfoContainer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function InfoContainer(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),currentTime=_useState2[0],setCurrentTime=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),pmAm=_useState4[0],setPmAm=_useState4[1];//init current active time\nuseEffect(function(){var date=new Date();var hours=date.getHours();var minutes=date.getMinutes();if(hours===12){setPmAm('PM');}else if(hours>11&&hours!==12){hours=date.getHours()-12;setPmAm('PM');}else setPmAm('AM');if(minutes<10){minutes=\"0\".concat(minutes);}setCurrentTime(\"\".concat(hours,\" : \").concat(minutes));setCurrentTime(\"4 : 15\");},[]);//update time every 30 seconds\nuseEffect(function(){setInterval(function(){var date=new Date();var hours=date.getHours();var minutes=date.getMinutes();if(hours===12){setPmAm('PM');}else if(hours>11){hours=date.getHours()-12;setPmAm('PM');}else setPmAm('AM');if(minutes<10)minutes=\"0\".concat(minutes);setCurrentTime(\"\".concat(hours,\" : \").concat(minutes));setCurrentTime(\"4 : 15\");},30000);},[]);return/*#__PURE__*/_jsxs(StyledInfoContainer,{children:[/*#__PURE__*/_jsx(Avatar,{id:\"StyledAvatar\",src:require('../assets/avatar.png')}),/*#__PURE__*/_jsxs(CurrentTime,{id:\"StyledCurrentTime\",children:[/*#__PURE__*/_jsx(Time,{id:\"Time\",children:currentTime}),/*#__PURE__*/_jsxs(PMAM,{id:\"PMAM\",children:[\" \",pmAm]})]}),/*#__PURE__*/_jsx(StyledFaReact,{id:\"StyledFaReact\"}),/*#__PURE__*/_jsxs(BatteryLife,{id:\"StyledBatteryLife\",children:[/*#__PURE__*/_jsx(BatteryLifeOuter,{id:\"BatteryLifeOuter\"}),/*#__PURE__*/_jsx(BatteryLifeInner,{id:\"BatterLifeInner\"}),/*#__PURE__*/_jsx(BatteryLifeTerminal,{id:\"BatterLifeTerminal\"})]})]});}","map":{"version":3,"sources":["C:/Users/thoma/Desktop/Usr/Dev/React/switch-ui-react/src/components/InfoContainer.tsx"],"names":["useEffect","useState","StyledInfoContainer","Avatar","CurrentTime","Time","PMAM","StyledFaReact","BatteryLife","BatteryLifeOuter","BatteryLifeInner","BatteryLifeTerminal","InfoContainer","currentTime","setCurrentTime","pmAm","setPmAm","date","Date","hours","getHours","minutes","getMinutes","setInterval","require"],"mappings":"0IAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,OACEC,mBADF,CAEEC,MAFF,CAGEC,WAHF,CAIEC,IAJF,CAKEC,IALF,CAMEC,aANF,CAOEC,WAPF,CAQEC,gBARF,CASEC,gBATF,CAUEC,mBAVF,KAWO,+BAXP,C,wFAaA,cAAe,SAASC,CAAAA,aAAT,EAAyB,CACvC,cAAsCX,QAAQ,CAAC,EAAD,CAA9C,wCAAOY,WAAP,eAAoBC,cAApB,eACC,eAAwBb,QAAQ,CAAC,EAAD,CAAhC,yCAAOc,IAAP,eAAaC,OAAb,eAEA;AACAhB,SAAS,CAAC,UAAM,CACd,GAAMiB,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,EAAb,CACA,GAAIC,CAAAA,KAAa,CAAGF,IAAI,CAACG,QAAL,EAApB,CACA,GAAIC,CAAAA,OAAY,CAAGJ,IAAI,CAACK,UAAL,EAAnB,CACA,GAAIH,KAAK,GAAK,EAAd,CAAkB,CAChBH,OAAO,CAAC,IAAD,CAAP,CACD,CAFD,IAEO,IAAIG,KAAK,CAAG,EAAR,EAAcA,KAAK,GAAK,EAA5B,CAAgC,CACrCA,KAAK,CAAGF,IAAI,CAACG,QAAL,GAAkB,EAA1B,CACAJ,OAAO,CAAC,IAAD,CAAP,CACD,CAHM,IAGAA,CAAAA,OAAO,CAAC,IAAD,CAAP,CACP,GAAGK,OAAO,CAAG,EAAb,CAAiB,CAACA,OAAO,YAAOA,OAAP,CAAP,CAAwB,CAC1CP,cAAc,WAAIK,KAAJ,eAAeE,OAAf,EAAd,CACAP,cAAc,UAAd,CACD,CAbQ,CAaN,EAbM,CAAT,CAeA;AACAd,SAAS,CAAC,UAAM,CACduB,WAAW,CAAC,UAAM,CAChB,GAAMN,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,EAAb,CACA,GAAIC,CAAAA,KAAK,CAAGF,IAAI,CAACG,QAAL,EAAZ,CACA,GAAIC,CAAAA,OAAY,CAAGJ,IAAI,CAACK,UAAL,EAAnB,CACA,GAAIH,KAAK,GAAK,EAAd,CAAkB,CAChBH,OAAO,CAAC,IAAD,CAAP,CACD,CAFD,IAEO,IAAIG,KAAK,CAAG,EAAZ,CAAgB,CACrBA,KAAK,CAAGF,IAAI,CAACG,QAAL,GAAkB,EAA1B,CACAJ,OAAO,CAAC,IAAD,CAAP,CACD,CAHM,IAGAA,CAAAA,OAAO,CAAC,IAAD,CAAP,CACP,GAAIK,OAAO,CAAG,EAAd,CAAkBA,OAAO,YAAOA,OAAP,CAAP,CACpBP,cAAc,WAAIK,KAAJ,eAAeE,OAAf,EAAd,CACFP,cAAc,UAAd,CACG,CAbU,CAaR,KAbQ,CAAX,CAcD,CAfQ,CAeN,EAfM,CAAT,CAiBA,mBACE,MAAC,mBAAD,yBACE,KAAC,MAAD,EAAQ,EAAE,CAAC,cAAX,CAA0B,GAAG,CAAEU,OAAO,CAAC,sBAAD,CAAtC,EADF,cAEI,MAAC,WAAD,EAAa,EAAE,CAAC,mBAAhB,wBACE,KAAC,IAAD,EAAM,EAAE,CAAC,MAAT,UAAiBX,WAAjB,EADF,cAEE,MAAC,IAAD,EAAM,EAAE,CAAC,MAAT,eAAkBE,IAAlB,GAFF,GAFJ,cAMI,KAAC,aAAD,EAAe,EAAE,CAAC,eAAlB,EANJ,cAOI,MAAC,WAAD,EAAa,EAAE,CAAC,mBAAhB,wBACE,KAAC,gBAAD,EAAkB,EAAE,CAAC,kBAArB,EADF,cAEE,KAAC,gBAAD,EAAkB,EAAE,CAAC,iBAArB,EAFF,cAGE,KAAC,mBAAD,EAAqB,EAAE,CAAC,oBAAxB,EAHF,GAPJ,GADF,CAeD","sourcesContent":["import { useEffect, useState } from 'react'\n\nimport { \n  StyledInfoContainer, \n  Avatar, \n  CurrentTime,\n  Time,\n  PMAM,\n  StyledFaReact,\n  BatteryLife,\n  BatteryLifeOuter,\n  BatteryLifeInner,\n  BatteryLifeTerminal,\n} from '../styles/StyledInfoContainer'\n\nexport default function InfoContainer() {\n\tconst [currentTime, setCurrentTime] = useState('')\n  const [pmAm, setPmAm] = useState('')\n\n  //init current active time\n  useEffect(() => {\n    const date = new Date();\n    let hours: number = date.getHours();\n    let minutes: any = date.getMinutes();\n    if (hours === 12) {\n      setPmAm('PM')\n    } else if (hours > 11 && hours !== 12) {\n      hours = date.getHours() - 12;\n      setPmAm('PM')\n    } else setPmAm('AM')\n    if(minutes < 10) {minutes = `0${minutes}`}\n    setCurrentTime(`${hours} : ${minutes}`)\n    setCurrentTime(`4 : 15`)\n  }, [])\n  \n  //update time every 30 seconds\n  useEffect(() => {\n    setInterval(() => {\n      const date = new Date();\n      let hours = date.getHours();\n      let minutes: any = date.getMinutes();\n      if (hours === 12) {\n        setPmAm('PM')\n      } else if (hours > 11) {\n        hours = date.getHours() - 12;\n        setPmAm('PM')\n      } else setPmAm('AM')\n      if (minutes < 10) minutes = `0${minutes}`\n    setCurrentTime(`${hours} : ${minutes}`)\n\t\tsetCurrentTime(`4 : 15`)\n    }, 30000)\n  }, [])\n\t\n  return(\n    <StyledInfoContainer>\n      <Avatar id='StyledAvatar' src={require('../assets/avatar.png')}/>\n        <CurrentTime id='StyledCurrentTime'>\n          <Time id='Time'>{currentTime}</Time>\n          <PMAM id='PMAM'> {pmAm}</PMAM>\n        </CurrentTime>\n        <StyledFaReact id='StyledFaReact'/>\n        <BatteryLife id='StyledBatteryLife'>\n          <BatteryLifeOuter id='BatteryLifeOuter'/>\n          <BatteryLifeInner id='BatterLifeInner'/>\n          <BatteryLifeTerminal id='BatterLifeTerminal'/>\n        </BatteryLife> \n    </StyledInfoContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}