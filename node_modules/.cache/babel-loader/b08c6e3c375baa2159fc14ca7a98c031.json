{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\Desktop\\\\Usr\\\\Dev\\\\React\\\\switch-ui-react\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { UIContainer } from './styles/StyledInfoContainer';\nimport ProjectsContainer from './components/ProjectsContainer';\nimport { AppContainer } from './styles/AppContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [currentTime, setCurrentTime] = useState('');\n  const [pmAm, setPmAm] = useState(''); //init current active time\n\n  useEffect(() => {\n    const date = new Date();\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n\n    if (hours === 12) {\n      setPmAm('PM');\n    } else if (hours > 11 && hours !== 12) {\n      hours = date.getHours() - 12;\n      setPmAm('PM');\n    } else setPmAm('AM');\n\n    if (minutes < 10) {\n      minutes = `0${minutes}`;\n    }\n\n    setCurrentTime(`${hours} : ${minutes}`);\n    setCurrentTime(`4 : 15`);\n  }, []); //update time every 30 seconds\n\n  useEffect(() => {\n    setInterval(() => {\n      const date = new Date();\n      let hours = date.getHours();\n      let minutes = date.getMinutes();\n\n      if (hours === 12) {\n        setPmAm('PM');\n      } else if (hours > 11) {\n        hours = date.getHours() - 12;\n        setPmAm('PM');\n      } else setPmAm('AM');\n\n      if (minutes < 10) minutes = `0${minutes}`;\n      setCurrentTime(`${hours} : ${minutes}`);\n      setCurrentTime(`4 : 15`);\n    }, 30000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    id: \"AppContainer\",\n    children: /*#__PURE__*/_jsxDEV(UIContainer, {\n      id: \"StyledUIContainer\",\n      children: [/*#__PURE__*/_jsxDEV(InfoContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          id: \"StyledAvatar\",\n          src: require('../assets/avatar.png')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CurrentTime, {\n          id: \"StyledCurrentTime\",\n          children: [/*#__PURE__*/_jsxDEV(Time, {\n            id: \"Time\",\n            children: currentTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PMAM, {\n            id: \"PMAM\",\n            children: [\" \", pmAm]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledFaReact, {\n          id: \"StyledFaReact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BatteryLife, {\n          id: \"StyledBatteryLife\",\n          children: [/*#__PURE__*/_jsxDEV(BatteryLifeOuter, {\n            id: \"BatteryLifeOuter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BatteryLifeInner, {\n            id: \"BatterLifeInner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BatteryLifeTerminal, {\n            id: \"BatterLifeTerminal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProjectsContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"jr21zpxzjjABfIlD7Jeq0t1zN84=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/thoma/Desktop/Usr/Dev/React/switch-ui-react/src/App.tsx"],"names":["useEffect","useState","UIContainer","ProjectsContainer","AppContainer","App","currentTime","setCurrentTime","pmAm","setPmAm","date","Date","hours","getHours","minutes","getMinutes","setInterval","require"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,WAAT,QAA4B,8BAA5B;AAEA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,SAASC,YAAT,QAA6B,uBAA7B;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACC,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC,CAH4B,CAK5B;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,QAAIC,KAAa,GAAGF,IAAI,CAACG,QAAL,EAApB;AACA,QAAIC,OAAY,GAAGJ,IAAI,CAACK,UAAL,EAAnB;;AACA,QAAIH,KAAK,KAAK,EAAd,EAAkB;AAChBH,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAFD,MAEO,IAAIG,KAAK,GAAG,EAAR,IAAcA,KAAK,KAAK,EAA5B,EAAgC;AACrCA,MAAAA,KAAK,GAAGF,IAAI,CAACG,QAAL,KAAkB,EAA1B;AACAJ,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAHM,MAGAA,OAAO,CAAC,IAAD,CAAP;;AACP,QAAGK,OAAO,GAAG,EAAb,EAAiB;AAACA,MAAAA,OAAO,GAAI,IAAGA,OAAQ,EAAtB;AAAwB;;AAC1CP,IAAAA,cAAc,CAAE,GAAEK,KAAM,MAAKE,OAAQ,EAAvB,CAAd;AACAP,IAAAA,cAAc,CAAE,QAAF,CAAd;AACD,GAbQ,EAaN,EAbM,CAAT,CAN4B,CAqB5B;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,WAAW,CAAC,MAAM;AAChB,YAAMN,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,UAAIC,KAAK,GAAGF,IAAI,CAACG,QAAL,EAAZ;AACA,UAAIC,OAAY,GAAGJ,IAAI,CAACK,UAAL,EAAnB;;AACA,UAAIH,KAAK,KAAK,EAAd,EAAkB;AAChBH,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD,OAFD,MAEO,IAAIG,KAAK,GAAG,EAAZ,EAAgB;AACrBA,QAAAA,KAAK,GAAGF,IAAI,CAACG,QAAL,KAAkB,EAA1B;AACAJ,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD,OAHM,MAGAA,OAAO,CAAC,IAAD,CAAP;;AACP,UAAIK,OAAO,GAAG,EAAd,EAAkBA,OAAO,GAAI,IAAGA,OAAQ,EAAtB;AACpBP,MAAAA,cAAc,CAAE,GAAEK,KAAM,MAAKE,OAAQ,EAAvB,CAAd;AACFP,MAAAA,cAAc,CAAE,QAAF,CAAd;AACG,KAbU,EAaR,KAbQ,CAAX;AAcD,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBACA,QAAC,YAAD;AAAc,IAAA,EAAE,EAAC,cAAjB;AAAA,2BACC,QAAC,WAAD;AAAa,MAAA,EAAE,EAAC,mBAAhB;AAAA,8BACK,QAAC,aAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAC,cAAX;AAA0B,UAAA,GAAG,EAAEU,OAAO,CAAC,sBAAD;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAa,UAAA,EAAE,EAAC,mBAAhB;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,MAAT;AAAA,sBAAiBX;AAAjB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,MAAT;AAAA,4BAAkBE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME,QAAC,aAAD;AAAe,UAAA,EAAE,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,WAAD;AAAa,UAAA,EAAE,EAAC,mBAAhB;AAAA,kCACE,QAAC,gBAAD;AAAkB,YAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,gBAAD;AAAkB,YAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,mBAAD;AAAqB,YAAA,EAAE,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,eAcC,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cAdD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADA;AAoBD;;GA3DuBH,G;;KAAAA,G","sourcesContent":["import { useEffect, useState } from 'react'\n\nimport { UIContainer } from './styles/StyledInfoContainer'\n\nimport ProjectsContainer from './components/ProjectsContainer';\nimport { AppContainer } from './styles/AppContainer';\n\nexport default function App() {\n  \n\tconst [currentTime, setCurrentTime] = useState('')\n  const [pmAm, setPmAm] = useState('')\n\n  //init current active time\n  useEffect(() => {\n    const date = new Date();\n    let hours: number = date.getHours();\n    let minutes: any = date.getMinutes();\n    if (hours === 12) {\n      setPmAm('PM')\n    } else if (hours > 11 && hours !== 12) {\n      hours = date.getHours() - 12;\n      setPmAm('PM')\n    } else setPmAm('AM')\n    if(minutes < 10) {minutes = `0${minutes}`}\n    setCurrentTime(`${hours} : ${minutes}`)\n    setCurrentTime(`4 : 15`)\n  }, [])\n  \n  //update time every 30 seconds\n  useEffect(() => {\n    setInterval(() => {\n      const date = new Date();\n      let hours = date.getHours();\n      let minutes: any = date.getMinutes();\n      if (hours === 12) {\n        setPmAm('PM')\n      } else if (hours > 11) {\n        hours = date.getHours() - 12;\n        setPmAm('PM')\n      } else setPmAm('AM')\n      if (minutes < 10) minutes = `0${minutes}`\n    setCurrentTime(`${hours} : ${minutes}`)\n\t\tsetCurrentTime(`4 : 15`)\n    }, 30000)\n  }, [])\n  \n  return (\n\t\t<AppContainer id='AppContainer'>\n\t\t\t<UIContainer id='StyledUIContainer'>\n        <InfoContainer>\n          <Avatar id='StyledAvatar' src={require('../assets/avatar.png')}/>\n          <CurrentTime id='StyledCurrentTime'>\n            <Time id='Time'>{currentTime}</Time>\n            <PMAM id='PMAM'> {pmAm}</PMAM>\n          </CurrentTime>\n          <StyledFaReact id='StyledFaReact'/>\n          <BatteryLife id='StyledBatteryLife'>\n            <BatteryLifeOuter id='BatteryLifeOuter'/>\n            <BatteryLifeInner id='BatterLifeInner'/>\n            <BatteryLifeTerminal id='BatterLifeTerminal'/>\n          </BatteryLife> \n        </InfoContainer>\n\t\t\t\t<ProjectsContainer />\n\t\t\t</UIContainer>\n\t\t</AppContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}